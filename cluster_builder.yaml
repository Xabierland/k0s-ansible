##
# Descripción: Playbook de Ansible para crear un cluster de k0s
# Autor: Xabier Gabiña Barañano
# Fecha: 2025-08-04
# Versión: 1.0
# Licencia: GPL-3.0
##

- name: Preconfigurar los nodos del clúster
  hosts: all
  become: yes
  tags: preconfig
  vars:
    dependencias:
      - "nano"
  tasks:
    - name: Configurar el hostname
      block:
        - name: Crear el archivo /etc/hostname
          hostname:
            name: "{{ inventory_hostname }}"
        - name: Actualziar el archivo /etc/hosts con las entradas completas
          copy:
            dest: /etc/hosts
            content: |
              127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4
              ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6
              {% for host in groups['all'] %}
              {{ hostvars[host]['ansible_host'] }} {{ host }}
              {% endfor %}
            owner: root
            group: root
            mode: '0644'
    - name: Desactivar el swap
      shell: |
        swapoff -a
        sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab    
    - name: Activar el IPv4 forwarding
      shell: |
        cat <<EOF | tee /etc/sysctl.d/k8s.conf
        net.ipv4.ip_forward = 1
        EOF
        sysctl --system
    - name: Activar módulos necesarios en el kernel
      block:
        - name: Activar el módulo dm_crypt en el kernel
          modprobe:
            name: dm_crypt
            state: present
        - name: Activar el módulo br_netfilter en el kernel
          modprobe:
            name: br_netfilter
            state: present
        - name: Asegurar que los módulos se carguen al reiniciar
          copy:
            dest: /etc/modules-load.d/k8s.conf
            content: |
              dm_crypt
              br_netfilter
    - name: Instalar dependencias del sistema
      block:
        - name: Instalar dependencias
          package:
            name: "{{ item }}"
            state: present
          loop: "{{ dependencias }}"
        - name: Instalar instalador de k0s
          shell: curl --proto '=https' --tlsv1.2 -sSf https://get.k0s.sh | K0S_VERSION={{ k0s_version }} sh
        - name: Crear el directorio de configuración de k0s
          shell: mkdir -p /etc/k0s  
- name: Configurar el nodo maestro
  hosts: master
  become: yes
  tags: master
  tasks:
    - name: Instalar k0s
      block:
        - name: Generamos el archivo de configuracion de k0s
          copy:
            dest: /etc/k0s/k0s.yaml
            content: |
              apiVersion: k0s.k0sproject.io/v1beta1
              kind: ClusterConfig
              metadata:
                name: k0s
                namespace: kube-system
              spec:
                api:
                  address: {{ hostvars[inventory_hostname]['ansible_host'] }}
                  externalAddress: {{ k0s_load_balancer }}
                  sans:
                    - {{ k0s_load_balancer }}
                    {% for host in groups['master'] + groups['control-planes'] %}
              - {{ hostvars[host]['ansible_host'] }}
                    {% endfor %}
        - name: Iniciamos el nodo maestro
          shell: k0s install controller -c /etc/k0s/k0s.yaml
        - name: Habilitamos el servicio de k0s
          shell: k0s start
        - name: Esperamos a que el servicio de k0s esté activo
          wait_for:
            port: 6443
            delay: 10
            timeout: 60
        - name: Generamos un token de acceso para el plano de control
          shell: k0s token create --role=controller --expiry=1h
          register: k0s_control_token
        - name: Generamos un token de acceso para el plano de datos
          shell: k0s token create --role=worker --expiry=1h
          register: k0s_data_token
- name: Configurar el plano de control
  hosts: control-planes
  become: yes
  tags: control-planes
  tasks:
    - name: Instalar K0s en el plano de control
      block:      
        - name: Crear el token file
          copy:
            dest: /tmp/k0s_control_token
            content: "{{ hostvars[groups['master'][0]]['k0s_control_token']['stdout'] }}"    
        - name: Generamos el archivo de configuracion de k0s
          copy:
            dest: /etc/k0s/k0s.yaml
            content: |
              apiVersion: k0s.k0sproject.io/v1beta1
              kind: ClusterConfig
              metadata:
                name: k0s
                namespace: kube-system
              spec:
                api:
                  address: {{ hostvars[inventory_hostname]['ansible_host'] }}
                  externalAddress: {{ k0s_load_balancer }}
                  sans:
                    - {{ k0s_load_balancer }}
                    {% for host in groups['master'] + groups['control-planes'] %}
              - {{ hostvars[host]['ansible_host'] }}
                    {% endfor %}
        - name: Unir el nodo al cluster como plano de control
          shell: k0s install controller -c /etc/k0s/k0s.yaml --token-file=/tmp/k0s_control_token
        - name: Habilitar el servicio de k0s en el plano de control
          shell: k0s start
- name: Configurar el plano de datos
  hosts: workers
  become: yes
  tags: workers
  tasks:
    - name: Crear el token file
      copy:
        dest: /tmp/k0s_worker_token
        content: "{{ hostvars[groups['master'][0]]['k0s_data_token']['stdout'] }}"
    - name: Instalar K0s en el plano de datos
      block:
        - name: Unir el nodo al cluster como worker
          shell: k0s install worker --token-file=/tmp/k0s_worker_token
        - name: Habilitar el servicio de k0s en el plano de datos
          shell: k0s start
